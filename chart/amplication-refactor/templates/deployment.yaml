apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Chart.Name }}-{{ .Values.name }}'
  labels:
    app: '{{ .Chart.Name }}-{{ .Values.name }}'
spec:
  {{- if not .Values.deployment.autoscaling.enabled }}
  replicas: {{ .Values.deployment.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: '{{ .Chart.Name }}-{{ .Values.name }}'
  template:
    metadata:
      {{- with .Values.deployment.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: '{{ .Chart.Name }}-{{ .Values.name }}'
    spec:
      {{- with .Values.deployment.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: '{{ .Chart.Name }}-{{ .Values.name }}'
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag | default .Chart.AppVersion }}"
          {{- if .Values.deployment.command.enabled }}
          command: ["/bin/sh", "-c"]
          args:
            - "./scheduler --request.url {{ (printf "http://%s:%v/system/update-statuses" .Values.service.app_name .Values.service.app_port_number ) }} --request.method POST --schedule '* * * * *'"
          {{- end }}
          {{- if config.enabled }}
          envFrom:
          - configMapRef:
              name: '{{ .Chart.Name }}-{{ .Values.name }}'
          {{- end }}
          {{- if deployment.securityContext.enabled }}
          securityContext:
            privileged: true
          {{- end }}
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          {{- if service.enabled }}
          ports:
            - name: {{ .Values.service.port.name }}
              containerPort: {{ .Values.service.port.number }}
              protocol: TCP
          {{- end }}
      {{- if .Values.deployment.volume.enabled }}
          volumeMounts:
            - name: {{ .Values.deployment.volume.name }}
              mountPath: {{ .Values.deployment.volume.path }}
      volumes:
        - name: {{ .Values.deployment.volume.name }}
          persistentVolumeClaim:
              claimName: {{ .Values.deployment.volume.name }}
      {{- end }}